name: Build Edge Module

on:
  push:
    branches:
    - 'main'
    - 'v*'
    paths:
    - 'src/**'
  pull_request:
    branches:
    - 'main'
    paths:
    - 'src/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: levi106/videoanalyzer

jobs:
  pytest:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install pipenv
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        
    - uses: actions/cache@v2
      id: pipenv-cache
      with:
        path: ~/.local/share/virtualenvs
        key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          
    - name: Install dependencies
      if: steps.pipenv-cache.outputs.cache-hit != 'true'
      run: pipenv sync --dev
      working-directory: ./src/videoanalyzer
      
    - name: Run Test
      run: pipenv run test
      working-directory: ./src/videoanalyzer
    
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Log in to the Container registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          onlatest=true
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          
    - name: Build and push to GitHub Container Registry
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./src/
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: ./src/Dockerfile.amd64
        push: ${{ github.event_name != 'pull_request' }}
        
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
